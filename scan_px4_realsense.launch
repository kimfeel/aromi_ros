<!-- ARoMI ros -->
<launch>
  <include file="$(find realsense2_camera)/launch/rs_camera.launch" />  <!-- visual odometry (vslam) -->
  <include file="$(find rplidar_ros)/launch/rplidar_a3.launch" />	<!-- lidar scan: ttyUSB0 -->
  <include file="$(find mavros)/launch/px4.launch" />			<!-- pixhawk communication: ttyUSB1, 921600 -->

  <node pkg="tf" type="static_transform_publisher" name="static1" args="0 0 0 0 0 0 local_origin_ned fcu 10"/>
  <node pkg="tf" type="static_transform_publisher" name="static2" args="0 0 0 0 0 0 camera_pose_frame local_origin 10"/>
  <node pkg="tf" type="static_transform_publisher" name="static3" args="0 0 0 0 0 0 camera_odom_frame map 10"/>
  <node pkg="tf" type="static_transform_publisher" name="static4" args="0 0 0 0 1.57 -1.57 local_origin laser 10"/>
  
  <node pkg="aromi_ros" type="odom_to_posestamped.py" name="odom_to_posestamped" output="screen" />	<!-- realsense2_camera output is odometry, so it convert odometry to posestamped messages -->
  <node pkg="aromi_ros" type="aromi_pub_setpoints_scan" name="pub_setpoints" output="screen" />	<!-- node for publishing setpoint position -->
  <node pkg="aromi_ros" type="aromi_pt_generation" name="pt_generation" output="screen" />	<!-- node for point cloud generation -->
  
  <node pkg="rosbag" name="rosbag" type="record" output="screen" args="-O $(find aromi_ros)/drone_data.bag /scan /mavros/local_position/pose /mavros/vision_pose/pose /tf /mavros/setpoint_position/local" />
  <!--node name="rviz" pkg="rviz" type="rviz" args="-d $(find aromi_ros)/drone.rviz" /-->
</launch>
